import streamlit as st
from PIL import Image
import base64
from io import BytesIO
from app.sidebar_manager import SidebarManager
from app.auth_manager import AuthManager
import qrcode

# C·∫•u h√¨nh trang
st.set_page_config(
    page_title="H·ªá Th·ªëng Qu·∫£n L√Ω H·ªì S∆°",
    layout="wide",
    initial_sidebar_state="expanded"
)

# Kh·ªüi t·∫°o tr·∫°ng th√°i phi√™n
if "authenticated" not in st.session_state:
    st.session_state.authenticated = False

# Render sidebar
sidebar = SidebarManager()
sidebar.render_sidebar()

# Load logo v√† ƒëi·ªÅu ch·ªânh k√≠ch th∆∞·ªõc
logo = Image.open("images/sidebar_logo.png")
logo_height = 40
aspect_ratio = logo.size[0] / logo.size[1]
logo_width = int(logo_height * aspect_ratio)
logo = logo.resize((logo_width, logo_height))

def image_to_base64(image):
    buffered = BytesIO()
    image.save(buffered, format="PNG")
    return base64.b64encode(buffered.getvalue()).decode()

# Ti√™u ƒë·ªÅ ch√≠nh v√† header
st.markdown("<h1 style='text-align: center;'>H·ªá Th·ªëng Qu·∫£n L√Ω VƒÉn B·∫£n Th√¥ng Minh</h1>", unsafe_allow_html=True)

# CSS cho layout logo
st.markdown("""
    <style>
        .header-container {
            display: flex;
            justify-content: center;
            margin: 0 auto;
            max-width: 300px;
        }
    </style>
""", unsafe_allow_html=True)

# Hi·ªÉn th·ªã logo
st.markdown(
    f"""
    <div class="header-container">
        <img src="data:image/png;base64,{image_to_base64(logo)}"
             width="{logo_width}px"
             height="{logo_height}px"
             style="object-fit: contain;">
    </div>
    """,
    unsafe_allow_html=True
)
st.markdown("---")


    # Tab 2: Li√™n k·∫øt tr·ª±c ti·∫øp
    with tab2:
        st.write("### üîó Li√™n K·∫øt Tr·ª±c Ti·∫øp ƒê·∫øn Tr·∫£i Nghi·ªám")

        # URL g·ªëc c·ªë ƒë·ªãnh (ch·ªâ l∆∞u trong session, kh√¥ng hi·ªÉn th·ªã)
        if 'base_url' not in st.session_state:
            st.session_state.base_url = "https://github.com/trungvuduc-ESKHD/demo.git"

        # T·∫°o v√† hi·ªÉn th·ªã li√™n k·∫øt (t·ª± ƒë·ªông)
        col1, col2 = st.columns(2)

        with col1:
            st.write("#### B√°o C√°o ")
            request_link = f"{st.session_state.base_url}?page=camera"
            st.text_input("Ch·ªçn v√† sao ch√©p li√™n k·∫øt:", value=request_link, key="request_link_input", label_visibility="collapsed")

        with col2:
            st.write("#### B√°o C√°o K·∫øt Qu·∫£")
            report_link = f"{st.session_state.base_url}?page=field_trip_report"
            st.text_input("Ch·ªçn v√† sao ch√©p li√™n k·∫øt:", value=report_link, key="report_link_input", label_visibility="collapsed")

        # T·∫°o QR code (gi·ªØ nguy√™n)
        if st.checkbox("T·∫°o M√£ QR"):
            try:
                col1, col2 = st.columns(2)

                with col1:
                    st.write("QR ƒê∆°n Xin")
                    qr = qrcode.QRCode(version=1, box_size=10, border=5)
                    qr.add_data(request_link)
                    qr.make(fit=True)
                    img = qr.make_image(fill_color="black", back_color="white")
                    buffered = BytesIO()
                    img.save(buffered, format="PNG")
                    st.image(buffered)

                with col2:
                    st.write("QR B√°o C√°o")
                    qr = qrcode.QRCode(version=1, box_size=10, border=5)
                    qr.add_data(report_link)
                    qr.make(fit=True)
                    img = qr.make_image(fill_color="black", back_color="white")
                    buffered = BytesIO()
                    img.save(buffered, format="PNG")
                    st.image(buffered)
            except ImportError:
                st.error("Vui l√≤ng c√†i ƒë·∫∑t g√≥i 'qrcode' ƒë·ªÉ t·∫°o m√£ QR.")

# Gi·ªõi thi·ªáu ch·ª©c nƒÉng cho ng∆∞·ªùi d√πng th√¥ng th∆∞·ªùng (lu√¥n hi·ªÉn th·ªã)
st.markdown("---")
st.markdown("### üìå Ch·ª©c NƒÉng D√†nh Cho Ng∆∞·ªùi D√πng")
col1, col2, col3 = st.columns(3)

with col1:
    st.markdown("""
    #### ‚úçÔ∏è So·∫°n Th·∫£o B√°o C√°o
    - Vi·∫øt B√°o C√°o tr·ª±c tuy·∫øn
    - D·ªÖ d√†ng n·ªôp
    """)

with col2:
    st.markdown("""
    #### üìù B√°o C√°o Inspection
    - So·∫°n ƒë∆°n theo m·∫´u
    - T·ª± ƒë·ªông t·∫°o vƒÉn b·∫£n
    """)

with col3:
    st.markdown("""
    #### üìã B√°o C√°o K·∫øt Ki·ªÉm ƒê·ªãnh
    - Vi·∫øt b√°o c√°o k·∫øt qu·∫£
    - N·ªôp d·ªÖ d√†ng
    """)

st.markdown("---")
st.markdown("<div style='text-align: right;'>Ng∆∞·ªùi th·ª±c hi·ªán: Trung V≈© </div>", unsafe_allow_html=True)
